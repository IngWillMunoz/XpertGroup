#pragma checksum "C:\Users\IngWi\OneDrive\Escritorio\Test2 .net\AppXpertGroup\Pages\TroubleDesc.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0702e2a81d125940fa2a6e25dbb4c04990426b31"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AppXpertGroup.Pages.Pages_TroubleDesc), @"mvc.1.0.razor-page", @"/Pages/TroubleDesc.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/TroubleDesc.cshtml", typeof(AppXpertGroup.Pages.Pages_TroubleDesc), null)]
namespace AppXpertGroup.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\IngWi\OneDrive\Escritorio\Test2 .net\AppXpertGroup\Pages\_ViewImports.cshtml"
using AppXpertGroup;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0702e2a81d125940fa2a6e25dbb4c04990426b31", @"/Pages/TroubleDesc.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0d6870dffef60a034bb9d5372cadca6303734130", @"/Pages/_ViewImports.cshtml")]
    public class Pages_TroubleDesc : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\IngWi\OneDrive\Escritorio\Test2 .net\AppXpertGroup\Pages\TroubleDesc.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
            BeginContext(71, 2392, true);
            WriteLiteral(@"
<h1>Cube Summation</h1><br>

<p>You are given a 3-D Matrix in which each block contains 0 initially. The first block is defined by the coordinate (1,1,1) and the last block is defined by the coordinate (N,N,N). There are two types of queries.</p>

<pre><code>UPDATE x y z W
</code></pre>

<p>updates the value of block (x,y,z) to W.</p>

<pre><code>QUERY x1 y1 z1 x2 y2 z2
</code></pre>

<p>calculates the sum of the value of blocks whose x coordinate is between x1 and x2 (inclusive), y coordinate between y1 and y2 (inclusive) and z coordinate between z1 and z2 (inclusive). </p>

<p><strong>Input Format</strong> <br>
The first line contains an integer T, the number of test-cases. T testcases follow. <br>
For each test case, the first line will contain two integers N and M separated by a single space. <br>
N defines the N * N * N matrix. <br>
M defines the number of operations. <br>
The next M lines will contain either  </p>

<pre><code> 1. UPDATE x y z W
 2. QUERY  x1 y1 z1 x2 y2 z2 
</co");
            WriteLiteral(@"de></pre>

<p><strong>Output Format</strong> <br>
Print the result for each QUERY.</p>

<p><strong>Constrains</strong> <br>
1 &lt;= T &lt;= 50 <br>
1 &lt;= N &lt;= 100 <br>
1 &lt;= M &lt;= 1000 <br>
1 &lt;= x1 &lt;= x2 &lt;= N <br>
1 &lt;= y1 &lt;= y2 &lt;= N <br>
1 &lt;= z1 &lt;= z2 &lt;= N <br>
1 &lt;= x,y,z &lt;= N <br>
-10<sup>9</sup> &lt;= W &lt;= 10<sup>9</sup>  </p>

<p><strong>Sample Input</strong></p>

<pre><code>2
4 5
UPDATE 2 2 2 4
QUERY 1 1 1 3 3 3
UPDATE 1 1 1 23
QUERY 2 2 2 4 4 4
QUERY 1 1 1 3 3 3
2 4
UPDATE 2 2 2 1
QUERY 1 1 1 1 1 1
QUERY 1 1 1 2 2 2
QUERY 2 2 2 2 2 2
</code></pre>

<p><strong>Sample Output</strong></p>

<pre><code>4
4
27
0
1
1
</code></pre>

<p><strong>Explanation</strong> <br>
First test case, we are given a cube of 4 * 4 * 4 and 5 queries.  Initially all the cells (1,1,1) to (4,4,4) are 0. <br>
<code>UPDATE 2 2 2 4</code> makes the cell (2,2,2) = 4 <br>
<code>QUERY 1 1 1 3 3 3</code>. As (2,2,2) is updated to 4 and the rest are all");
            WriteLiteral(@" 0. The answer to this query is 4. <br>
<code>UPDATE 1 1 1 23</code>. updates the cell (1,1,1) to 23. 
<code>QUERY 2 2 2 4 4 4</code>. Only the cell (1,1,1) and (2,2,2) are non-zero and (1,1,1) is not between (2,2,2) and (4,4,4). So, the answer is 4. <br>
<code>QUERY 1 1 1 3 3 3</code>. 2 cells are non-zero and their sum is 23+4 = 27. </p>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
